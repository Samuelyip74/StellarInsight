# Generated by Django 2.2.4 on 2019-08-29 04:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BatchHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(blank=True, max_length=64, null=True)),
                ('batch_description', models.CharField(blank=True, max_length=256, null=True)),
                ('hotspot_id', models.IntegerField(blank=True, null=True)),
                ('batch_status', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'batch_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=128, null=True)),
                ('planid', models.IntegerField(blank=True, db_column='planId', null=True)),
                ('billamount', models.CharField(blank=True, db_column='billAmount', max_length=200, null=True)),
                ('billaction', models.CharField(db_column='billAction', max_length=128)),
                ('billperformer', models.CharField(blank=True, db_column='billPerformer', max_length=200, null=True)),
                ('billreason', models.CharField(blank=True, db_column='billReason', max_length=200, null=True)),
                ('paymentmethod', models.CharField(blank=True, max_length=200, null=True)),
                ('cash', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardname', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardnumber', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardverification', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardtype', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardexp', models.CharField(blank=True, max_length=200, null=True)),
                ('coupon', models.CharField(blank=True, max_length=200, null=True)),
                ('discount', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'billing_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingMerchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128)),
                ('password', models.CharField(max_length=128)),
                ('mac', models.CharField(max_length=200)),
                ('pin', models.CharField(max_length=200)),
                ('txnid', models.CharField(db_column='txnId', max_length=200)),
                ('planname', models.CharField(db_column='planName', max_length=128)),
                ('planid', models.IntegerField(db_column='planId')),
                ('quantity', models.CharField(max_length=200)),
                ('business_email', models.CharField(max_length=200)),
                ('business_id', models.CharField(max_length=200)),
                ('txn_type', models.CharField(max_length=200)),
                ('txn_id', models.CharField(max_length=200)),
                ('payment_type', models.CharField(max_length=200)),
                ('payment_tax', models.CharField(max_length=200)),
                ('payment_cost', models.CharField(max_length=200)),
                ('payment_fee', models.CharField(max_length=200)),
                ('payment_total', models.CharField(max_length=200)),
                ('payment_currency', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('payer_email', models.CharField(max_length=200)),
                ('payer_address_name', models.CharField(max_length=200)),
                ('payer_address_street', models.CharField(max_length=200)),
                ('payer_address_country', models.CharField(max_length=200)),
                ('payer_address_country_code', models.CharField(max_length=200)),
                ('payer_address_city', models.CharField(max_length=200)),
                ('payer_address_state', models.CharField(max_length=200)),
                ('payer_address_zip', models.CharField(max_length=200)),
                ('payment_date', models.DateTimeField()),
                ('payment_status', models.CharField(max_length=200)),
                ('pending_reason', models.CharField(max_length=200)),
                ('reason_code', models.CharField(max_length=200)),
                ('receipt_id', models.CharField(db_column='receipt_ID', max_length=200)),
                ('payment_address_status', models.CharField(max_length=200)),
                ('vendor_type', models.CharField(max_length=200)),
                ('payer_status', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'billing_merchant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingPaypal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=128, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('mac', models.CharField(blank=True, max_length=200, null=True)),
                ('pin', models.CharField(blank=True, max_length=200, null=True)),
                ('txnid', models.CharField(blank=True, db_column='txnId', max_length=200, null=True)),
                ('planname', models.CharField(blank=True, db_column='planName', max_length=128, null=True)),
                ('planid', models.CharField(blank=True, db_column='planId', max_length=200, null=True)),
                ('quantity', models.CharField(blank=True, max_length=200, null=True)),
                ('receiver_email', models.CharField(blank=True, max_length=200, null=True)),
                ('business', models.CharField(blank=True, max_length=200, null=True)),
                ('tax', models.CharField(blank=True, max_length=200, null=True)),
                ('mc_gross', models.CharField(blank=True, max_length=200, null=True)),
                ('mc_fee', models.CharField(blank=True, max_length=200, null=True)),
                ('mc_currency', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('payer_email', models.CharField(blank=True, max_length=200, null=True)),
                ('address_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address_street', models.CharField(blank=True, max_length=200, null=True)),
                ('address_country', models.CharField(blank=True, max_length=200, null=True)),
                ('address_country_code', models.CharField(blank=True, max_length=200, null=True)),
                ('address_city', models.CharField(blank=True, max_length=200, null=True)),
                ('address_state', models.CharField(blank=True, max_length=200, null=True)),
                ('address_zip', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_address_status', models.CharField(blank=True, max_length=200, null=True)),
                ('payer_status', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'billing_paypal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planname', models.CharField(blank=True, db_column='planName', max_length=128, null=True)),
                ('planid', models.CharField(blank=True, db_column='planId', max_length=128, null=True)),
                ('plantype', models.CharField(blank=True, db_column='planType', max_length=128, null=True)),
                ('plantimebank', models.CharField(blank=True, db_column='planTimeBank', max_length=128, null=True)),
                ('plantimetype', models.CharField(blank=True, db_column='planTimeType', max_length=128, null=True)),
                ('plantimerefillcost', models.CharField(blank=True, db_column='planTimeRefillCost', max_length=128, null=True)),
                ('planbandwidthup', models.CharField(blank=True, db_column='planBandwidthUp', max_length=128, null=True)),
                ('planbandwidthdown', models.CharField(blank=True, db_column='planBandwidthDown', max_length=128, null=True)),
                ('plantraffictotal', models.CharField(blank=True, db_column='planTrafficTotal', max_length=128, null=True)),
                ('plantrafficup', models.CharField(blank=True, db_column='planTrafficUp', max_length=128, null=True)),
                ('plantrafficdown', models.CharField(blank=True, db_column='planTrafficDown', max_length=128, null=True)),
                ('plantrafficrefillcost', models.CharField(blank=True, db_column='planTrafficRefillCost', max_length=128, null=True)),
                ('planrecurring', models.CharField(blank=True, db_column='planRecurring', max_length=128, null=True)),
                ('planrecurringperiod', models.CharField(blank=True, db_column='planRecurringPeriod', max_length=128, null=True)),
                ('planrecurringbillingschedule', models.CharField(db_column='planRecurringBillingSchedule', max_length=128)),
                ('plancost', models.CharField(blank=True, db_column='planCost', max_length=128, null=True)),
                ('plansetupcost', models.CharField(blank=True, db_column='planSetupCost', max_length=128, null=True)),
                ('plantax', models.CharField(blank=True, db_column='planTax', max_length=128, null=True)),
                ('plancurrency', models.CharField(blank=True, db_column='planCurrency', max_length=128, null=True)),
                ('plangroup', models.CharField(blank=True, db_column='planGroup', max_length=128, null=True)),
                ('planactive', models.CharField(db_column='planActive', max_length=32)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'billing_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingPlansProfiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=128)),
                ('profile_name', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'billing_plans_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratename', models.CharField(db_column='rateName', max_length=128)),
                ('ratetype', models.CharField(db_column='rateType', max_length=128)),
                ('ratecost', models.IntegerField(db_column='rateCost')),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'billing_rates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, db_column='Type', max_length=30, null=True)),
                ('attribute', models.CharField(blank=True, db_column='Attribute', max_length=64, null=True)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=64, null=True)),
                ('format', models.CharField(blank=True, db_column='Format', max_length=20, null=True)),
                ('vendor', models.CharField(blank=True, db_column='Vendor', max_length=32, null=True)),
                ('recommendedop', models.CharField(blank=True, db_column='RecommendedOP', max_length=32, null=True)),
                ('recommendedtable', models.CharField(blank=True, db_column='RecommendedTable', max_length=32, null=True)),
                ('recommendedhelper', models.CharField(blank=True, db_column='RecommendedHelper', max_length=32, null=True)),
                ('recommendedtooltip', models.CharField(blank=True, db_column='RecommendedTooltip', max_length=512, null=True)),
            ],
            options={
                'db_table': 'dictionary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hotspots',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('mac', models.CharField(blank=True, max_length=200, null=True)),
                ('geocode', models.CharField(blank=True, max_length=200, null=True)),
                ('owner', models.CharField(blank=True, max_length=200, null=True)),
                ('email_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('manager', models.CharField(blank=True, max_length=200, null=True)),
                ('email_manager', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('phone1', models.CharField(blank=True, max_length=200, null=True)),
                ('phone2', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('companywebsite', models.CharField(blank=True, max_length=200, null=True)),
                ('companyemail', models.CharField(blank=True, max_length=200, null=True)),
                ('companycontact', models.CharField(blank=True, max_length=200, null=True)),
                ('companyphone', models.CharField(blank=True, max_length=200, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'hotspots',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('status_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
                ('notes', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.IntegerField()),
                ('plan_id', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'invoice_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32)),
                ('notes', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'invoice_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32)),
                ('notes', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'invoice_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nasname', models.CharField(max_length=128)),
                ('shortname', models.CharField(blank=True, max_length=32, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('ports', models.IntegerField(blank=True, null=True)),
                ('secret', models.CharField(max_length=60)),
                ('server', models.CharField(blank=True, max_length=64, null=True)),
                ('community', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'nas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('netid', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('latitude', models.CharField(max_length=20)),
                ('longitude', models.CharField(max_length=20)),
                ('owner_name', models.CharField(max_length=50)),
                ('owner_email', models.CharField(max_length=50)),
                ('owner_phone', models.CharField(max_length=25)),
                ('owner_address', models.CharField(max_length=100)),
                ('approval_status', models.CharField(max_length=1)),
                ('ip', models.CharField(max_length=20)),
                ('mac', models.CharField(max_length=20, unique=True)),
                ('uptime', models.CharField(max_length=100)),
                ('robin', models.CharField(max_length=20)),
                ('batman', models.CharField(max_length=20)),
                ('memfree', models.CharField(max_length=20)),
                ('nbs', models.TextField()),
                ('gateway', models.CharField(max_length=20)),
                ('gw_qual', models.CharField(db_column='gw-qual', max_length=20)),
                ('routes', models.TextField()),
                ('users', models.CharField(max_length=3)),
                ('kbdown', models.CharField(max_length=20)),
                ('kbup', models.CharField(max_length=20)),
                ('hops', models.CharField(max_length=3)),
                ('rank', models.CharField(max_length=3)),
                ('ssid', models.CharField(max_length=20)),
                ('pssid', models.CharField(max_length=20)),
                ('gateway_bit', models.IntegerField()),
                ('memlow', models.CharField(max_length=20)),
                ('usershi', models.CharField(max_length=3)),
                ('cpu', models.FloatField()),
                ('wan_iface', models.CharField(blank=True, max_length=128, null=True)),
                ('wan_ip', models.CharField(blank=True, max_length=128, null=True)),
                ('wan_mac', models.CharField(blank=True, max_length=128, null=True)),
                ('wan_gateway', models.CharField(blank=True, max_length=128, null=True)),
                ('wifi_iface', models.CharField(blank=True, max_length=128, null=True)),
                ('wifi_ip', models.CharField(blank=True, max_length=128, null=True)),
                ('wifi_mac', models.CharField(blank=True, max_length=128, null=True)),
                ('wifi_ssid', models.CharField(blank=True, max_length=128, null=True)),
                ('wifi_key', models.CharField(blank=True, max_length=128, null=True)),
                ('wifi_channel', models.CharField(blank=True, max_length=128, null=True)),
                ('lan_iface', models.CharField(blank=True, max_length=128, null=True)),
                ('lan_mac', models.CharField(blank=True, max_length=128, null=True)),
                ('lan_ip', models.CharField(blank=True, max_length=128, null=True)),
                ('wan_bup', models.CharField(blank=True, max_length=128, null=True)),
                ('wan_bdown', models.CharField(blank=True, max_length=128, null=True)),
                ('firmware', models.CharField(blank=True, max_length=128, null=True)),
                ('firmware_revision', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Operators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32)),
                ('password', models.CharField(max_length=32)),
                ('firstname', models.CharField(max_length=32)),
                ('lastname', models.CharField(max_length=32)),
                ('title', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('company', models.CharField(max_length=32)),
                ('phone1', models.CharField(max_length=32)),
                ('phone2', models.CharField(max_length=32)),
                ('email1', models.CharField(max_length=32)),
                ('email2', models.CharField(max_length=32)),
                ('messenger1', models.CharField(max_length=32)),
                ('messenger2', models.CharField(max_length=32)),
                ('notes', models.CharField(max_length=128)),
                ('lastlogin', models.DateTimeField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'operators',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OperatorsAcl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator_id', models.IntegerField()),
                ('file', models.CharField(max_length=128)),
                ('access', models.IntegerField()),
            ],
            options={
                'db_table': 'operators_acl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OperatorsAclFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(max_length=128)),
                ('category', models.CharField(max_length=128)),
                ('section', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'operators_acl_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField()),
                ('type_id', models.IntegerField()),
                ('notes', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32)),
                ('notes', models.CharField(max_length=128)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'payment_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proxys',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('proxyname', models.CharField(blank=True, max_length=128, null=True)),
                ('retry_delay', models.IntegerField(blank=True, null=True)),
                ('retry_count', models.IntegerField(blank=True, null=True)),
                ('dead_time', models.IntegerField(blank=True, null=True)),
                ('default_fallback', models.IntegerField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'proxys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radacct',
            fields=[
                ('radacctid', models.BigAutoField(primary_key=True, serialize=False)),
                ('acctsessionid', models.CharField(max_length=64)),
                ('acctuniqueid', models.CharField(max_length=32, unique=True)),
                ('username', models.CharField(max_length=64)),
                ('realm', models.CharField(blank=True, max_length=64, null=True)),
                ('nasipaddress', models.CharField(max_length=15)),
                ('nasportid', models.CharField(blank=True, max_length=15, null=True)),
                ('nasporttype', models.CharField(blank=True, max_length=32, null=True)),
                ('acctstarttime', models.DateTimeField(blank=True, null=True)),
                ('acctupdatetime', models.DateTimeField(blank=True, null=True)),
                ('acctstoptime', models.DateTimeField(blank=True, null=True)),
                ('acctinterval', models.IntegerField(blank=True, null=True)),
                ('acctsessiontime', models.PositiveIntegerField(blank=True, null=True)),
                ('acctauthentic', models.CharField(blank=True, max_length=32, null=True)),
                ('connectinfo_start', models.CharField(blank=True, max_length=50, null=True)),
                ('connectinfo_stop', models.CharField(blank=True, max_length=50, null=True)),
                ('acctinputoctets', models.BigIntegerField(blank=True, null=True)),
                ('acctoutputoctets', models.BigIntegerField(blank=True, null=True)),
                ('calledstationid', models.CharField(max_length=50)),
                ('callingstationid', models.CharField(max_length=50)),
                ('acctterminatecause', models.CharField(max_length=32)),
                ('servicetype', models.CharField(blank=True, max_length=32, null=True)),
                ('framedprotocol', models.CharField(blank=True, max_length=32, null=True)),
                ('framedipaddress', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'radacct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radcheck',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=64)),
                ('attribute', models.CharField(max_length=64)),
                ('op', models.CharField(max_length=2)),
                ('value', models.CharField(max_length=253)),
            ],
            options={
                'db_table': 'radcheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radgroupcheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.CharField(max_length=64)),
                ('attribute', models.CharField(max_length=64)),
                ('op', models.CharField(max_length=2)),
                ('value', models.CharField(max_length=253)),
            ],
            options={
                'db_table': 'radgroupcheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radgroupreply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupname', models.CharField(max_length=64)),
                ('attribute', models.CharField(max_length=64)),
                ('op', models.CharField(max_length=2)),
                ('value', models.CharField(max_length=253)),
            ],
            options={
                'db_table': 'radgroupreply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radpostauth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('pass_field', models.CharField(db_column='pass', max_length=64)),
                ('reply', models.CharField(max_length=32)),
                ('authdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'radpostauth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radreply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('attribute', models.CharField(max_length=64)),
                ('op', models.CharField(max_length=2)),
                ('value', models.CharField(max_length=253)),
            ],
            options={
                'db_table': 'radreply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Radusergroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('groupname', models.CharField(max_length=64)),
                ('priority', models.IntegerField()),
            ],
            options={
                'db_table': 'radusergroup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Realms',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('realmname', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('authhost', models.CharField(blank=True, max_length=256, null=True)),
                ('accthost', models.CharField(blank=True, max_length=256, null=True)),
                ('secret', models.CharField(blank=True, max_length=128, null=True)),
                ('ldflag', models.CharField(blank=True, max_length=64, null=True)),
                ('nostrip', models.IntegerField(blank=True, null=True)),
                ('hints', models.IntegerField(blank=True, null=True)),
                ('notrealm', models.IntegerField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'realms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userbehavior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('macaddress', models.CharField(max_length=32)),
                ('username', models.CharField(max_length=32)),
                ('url', models.CharField(max_length=32)),
                ('protocol', models.CharField(max_length=32)),
                ('ipaddress', models.CharField(max_length=32)),
                ('srcport', models.CharField(max_length=32)),
                ('dstip', models.CharField(max_length=32)),
                ('dstport', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'userbehavior',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userbillinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=128, null=True)),
                ('planname', models.CharField(blank=True, db_column='planName', max_length=128, null=True)),
                ('hotspot_id', models.IntegerField(blank=True, null=True)),
                ('hotspotlocation', models.CharField(blank=True, max_length=32, null=True)),
                ('contactperson', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=200, null=True)),
                ('paymentmethod', models.CharField(blank=True, max_length=200, null=True)),
                ('cash', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardname', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardnumber', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardverification', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardtype', models.CharField(blank=True, max_length=200, null=True)),
                ('creditcardexp', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('changeuserbillinfo', models.CharField(blank=True, max_length=128, null=True)),
                ('lead', models.CharField(blank=True, max_length=200, null=True)),
                ('coupon', models.CharField(blank=True, max_length=200, null=True)),
                ('ordertaker', models.CharField(blank=True, max_length=200, null=True)),
                ('billstatus', models.CharField(blank=True, max_length=200, null=True)),
                ('lastbill', models.DateField()),
                ('nextbill', models.DateField()),
                ('nextinvoicedue', models.IntegerField(blank=True, null=True)),
                ('billdue', models.IntegerField(blank=True, null=True)),
                ('postalinvoice', models.CharField(blank=True, max_length=8, null=True)),
                ('faxinvoice', models.CharField(blank=True, max_length=8, null=True)),
                ('emailinvoice', models.CharField(blank=True, max_length=8, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'userbillinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=128, null=True)),
                ('firstname', models.CharField(blank=True, max_length=200, null=True)),
                ('lastname', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('department', models.CharField(blank=True, max_length=200, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('workphone', models.CharField(blank=True, max_length=200, null=True)),
                ('homephone', models.CharField(blank=True, max_length=200, null=True)),
                ('mobilephone', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('changeuserinfo', models.CharField(blank=True, max_length=128, null=True)),
                ('portalloginpassword', models.CharField(blank=True, max_length=128, null=True)),
                ('enableportallogin', models.IntegerField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('creationby', models.CharField(blank=True, max_length=128, null=True)),
                ('updatedate', models.DateTimeField(blank=True, null=True)),
                ('updateby', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'userinfo',
                'managed': False,
            },
        ),
    ]
